{"version":3,"sources":["components/Item.js","components/Header.js","components/NameDialog.js","components/Todo.js","components/List.js","App.js","index.js"],"names":["Item","this","props","id","text","ListItem","role","undefined","dense","button","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","ListItemText","onClick","openDialog","bind","Typography","multiline","style","wordWrap","ListItemSecondaryAction","IconButton","aria-label","delItem","fontSize","color","Divider","Component","useStyles","makeStyles","theme","paper","padding","spacing","backgroundColor","palette","background","Header","classes","useState","anchorEl","setAnchorEl","openModal","setOpen","open","Boolean","handleClick","event","currentTarget","delModal","delTodo","Popper","onMouseDown","placement","transition","TransitionProps","Fade","timeout","Paper","elevation","className","Box","flexDirection","Button","flex","size","CardHeader","action","title","Modal","onClose","aria-labelledby","aria-describedby","width","height","NameDialog","mode","name","setName","handleClose","val","Dialog","DialogTitle","DialogContent","TextField","onChange","e","target","value","label","DialogActions","Todo","setState","dialogStatus","closeDialog","renameTodo","renameItem","newItems","state","items","map","item","addItem","inp","inputText","newId","complete","Number","console","log","filter","localStorage","getItem","JSON","parse","setItem","stringify","Grid","xs","sm","mt","Container","Card","variant","CardContent","overflow","key","CardActions","disableSpacing","display","alignItems","flexGrow","fullWidth","autoFocus","required","type","React","List","onCloseDialog","addTodo","todos","new_id","removeItem","todo","newTodos","container","justify","App","direction","AppBar","position","Toolbar","md","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de9bd918.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Checkbox,\n  ListItemSecondaryAction,\n  IconButton,\n  Typography,\n  Divider,\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nexport class Item extends Component {\n  render() {\n    const { id, text } = this.props;\n    return (\n      <div>\n        <ListItem role={undefined} dense button>\n          <ListItemIcon>\n            <Checkbox\n              edge=\"start\"\n              // checked={checked.indexOf(value) !== -1}\n              tabIndex={-1}\n              disableRipple\n              // inputProps={{ 'aria-labelledby': labelId }}\n            />\n          </ListItemIcon>\n          <ListItemText\n            onClick={this.props.openDialog.bind(this, \"task\", this.props.id)}\n          >\n            <Typography multiline style={{ wordWrap: \"break-word\" }}>\n              {text}\n            </Typography>\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"comments\"\n              onClick={this.props.delItem.bind(this, id)}\n            >\n              <ClearIcon fontSize=\"small\" color=\"secondary\" />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n      </div>\n    );\n  }\n}\n\nexport default Item;\n","import React, { useState } from \"react\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport {\n  IconButton,\n  CardHeader,\n  Popper,\n  Paper,\n  Fade,\n  Button,\n  Box,\n  Modal,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [openModal, setOpen] = useState(false);\n\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const delModal = () => {\n    setAnchorEl(null);\n\n    props.delTodo();\n  };\n\n  return (\n    <div>\n      <Popper\n        open={open}\n        onMouseDown={() => {\n          handleClick(false);\n        }}\n        anchorEl={anchorEl}\n        placement=\"bottom-end\"\n        transition\n      >\n        {({ TransitionProps }) => (\n          <Fade {...TransitionProps} timeout={350}>\n            <Paper elevation={1} className={classes.paper}>\n              <Box flexDirection=\"column\">\n                <Button\n                  flex\n                  aria-label=\"rename\"\n                  size=\"small\"\n                  onClick={() => props.openDialog(\"to-do\")}\n                >\n                  Rename\n                </Button>\n                <Button\n                  flex\n                  aria-label=\"delete\"\n                  size=\"small\"\n                  onClick={delModal}\n                >\n                  Delete\n                </Button>\n              </Box>\n            </Paper>\n          </Fade>\n        )}\n      </Popper>\n      <CardHeader\n        action={\n          <IconButton aria-label=\"settings\" onClick={handleClick}>\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={props.title}\n      />\n      <Modal\n        open={openModal}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <Paper style={{ width: \"400\", height: \"300\" }}>\n          <p>dwdwdwdw</p>\n        </Paper>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport {\n  TextField,\n  Dialog,\n  DialogTitle,\n  Button,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nconst NameDialog = (props) => {\n  const { onClose, open, mode } = props;\n  const [name, setName] = useState(\"\");\n  const handleClose = (val) => {\n    onClose(name);\n    setName(\"\");\n  };\n\n  const onChange = (e) => {\n    setName(e.target.value);\n  };\n  return (\n    <Dialog\n      onClose={() => {\n        handleClose(\"\");\n      }}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <DialogTitle>{mode}</DialogTitle>\n      <DialogContent>\n        <TextField onChange={onChange} label=\"Type here\" />\n        <DialogActions>\n          <Button onClick={handleClose}>Ok</Button>\n          <Button onClick={handleClose}>Cancel</Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default NameDialog;\n","import React from \"react\";\nimport Item from \"./Item\";\nimport Header from \"./Header\";\nimport NameDialog from \"./NameDialog\";\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  IconButton,\n  List,\n  TextField,\n  Container,\n  Box,\n  Grid,\n} from \"@material-ui/core\";\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputText: \"\",\n      newId: 1,\n      items: [],\n      dialogStatus: false,\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      newId: localStorage.getItem(\"newId\" + this.props.id) || this.state.newId,\n      items:\n        JSON.parse(localStorage.getItem(\"items\" + this.props.id)) ||\n        this.state.items,\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\"newId\" + this.props.id, this.state.newId);\n    localStorage.setItem(\n      \"items\" + this.props.id,\n      JSON.stringify(this.state.items)\n    );\n  }\n  openDialog = (mode, id) => {\n    this.mode = mode;\n    this.id = id;\n    this.setState({\n      dialogStatus: true,\n    });\n  };\n\n  closeDialog = (name) => {\n    if (name !== \"\" && this.mode === \"to-do\") this.renameTodo(name);\n    if (name !== \"\" && this.mode === \"task\") this.renameItem(name, this.id);\n    this.setState({\n      dialogStatus: false,\n    });\n  };\n\n  renameTodo = (name) => {\n    this.props.renameTodo(this.props.id, name);\n  };\n\n  renameItem = (name, id) => {\n    let newItems = [\n      ...this.state.items.map((item) => {\n        if (item.id === id) item.text = name;\n        return item;\n      }),\n    ];\n    this.setState({\n      items: newItems,\n    });\n  };\n\n  addItem = () => {\n    let inp = this.state.inputText === \"\" ? \"Task\" : this.state.inputText;\n    this.setState({\n      items: [\n        ...this.state.items,\n        {\n          id: this.state.newId,\n          text: inp,\n          complete: false,\n        },\n      ],\n      newId: Number(this.state.newId) + 1,\n      inputText: \"\",\n    });\n    console.log(this.state.newId);\n  };\n  delItem = (id) => {\n    this.setState({\n      items: [...this.state.items.filter((item) => item.id !== id)],\n    });\n  };\n\n  onChange = (e) => {\n    this.setState({\n      inputText: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <Grid item xs={12} sm={4}>\n        <Box mt={2}>\n          <Container>\n            <Card variant=\"elevation\" elevation=\"8\">\n              <Header\n                title={this.props.title}\n                openDialog={this.openDialog}\n                delTodo={this.props.delTodo.bind(this, this.props.id)}\n              />\n              <CardContent>\n                <Box height=\"11rem\" overflow=\"auto\">\n                  <List>\n                    {this.state.items.map((item) => (\n                      <Item\n                        id={item.id}\n                        key={item.id}\n                        text={item.text}\n                        delItem={this.delItem}\n                        openDialog={this.openDialog}\n                      />\n                    ))}\n                  </List>\n                </Box>\n              </CardContent>\n              <CardActions disableSpacing>\n                <Box\n                  display=\"flex\"\n                  alignItems=\"flex-end\"\n                  flexDirection=\"row\"\n                  style={{ width: \"100%\" }}\n                >\n                  <Box flexGrow={2}>\n                    <TextField\n                      fullWidth\n                      multiline\n                      autoFocus\n                      onChange={this.onChange}\n                      value={this.state.inputText}\n                      label=\"Add task...\"\n                      required=\"true\"\n                    />\n                  </Box>\n                  <Box>\n                    <IconButton\n                      type=\"submit\"\n                      size=\"small\"\n                      onClick={this.addItem}\n                    >\n                      <AddBoxOutlinedIcon color=\"secondary\" />\n                    </IconButton>\n                  </Box>\n                </Box>\n              </CardActions>\n            </Card>\n          </Container>\n        </Box>\n        <NameDialog\n          open={this.state.dialogStatus}\n          onClose={this.closeDialog}\n          mode={`Edit this ${this.mode}`}\n        />\n      </Grid>\n    );\n  }\n}\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport { Grid, IconButton } from \"@material-ui/core\";\nimport AddToPhotosIcon from \"@material-ui/icons/AddToPhotos\";\nimport NameDialog from \"./NameDialog\";\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(localStorage.getItem(\"todos\"));\n    this.state = {\n      new_id: 1,\n      todos: [],\n      dialogStatus: false,\n      name: \"\",\n    };\n  }\n  componentDidUpdate() {\n    localStorage.setItem(\"new_id\", this.state.new_id);\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n  }\n\n  componentDidMount() {\n    this.setState({\n      new_id: Number(localStorage.getItem(\"new_id\")) || this.state.new_id,\n      todos: JSON.parse(localStorage.getItem(\"todos\")) || this.state.todos,\n    });\n  }\n  openDialog = () => {\n    this.setState({\n      dialogStatus: true,\n    });\n  };\n  onCloseDialog = (name) => {\n    this.setState({\n      dialogStatus: false,\n    });\n    this.addTodo(name);\n  };\n  addTodo = (name) => {\n    if (name !== \"\") {\n      this.setState({\n        todos: [\n          ...this.state.todos,\n          {\n            id: this.state.new_id,\n            title: name,\n          },\n        ],\n        new_id: Number(this.state.new_id) + 1,\n        name: \"\",\n      });\n    }\n  };\n\n  delTodo = (id) => {\n    localStorage.removeItem(\"items\" + id);\n    localStorage.removeItem(\"newId\" + id);\n    this.setState({\n      todos: [...this.state.todos.filter((todo) => todo.id !== id)],\n    });\n  };\n  renameTodo = (id, name) => {\n    let newTodos = [\n      ...this.state.todos.map((todo) => {\n        if (todo.id === id) todo.title = name;\n        return todo;\n      }),\n    ];\n    this.setState({\n      todos: newTodos,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\n          {this.state.todos.map((todo) => (\n            <Todo\n              id={todo.id}\n              key={todo.id}\n              title={todo.title}\n              delTodo={this.delTodo}\n              renameTodo={this.renameTodo}\n              className=\"col-md\"\n            />\n          ))}\n\n          <IconButton onClick={this.openDialog}>\n            <AddToPhotosIcon fontSize=\"large\" />\n          </IconButton>\n          <NameDialog\n            open={this.state.dialogStatus}\n            onClose={this.onCloseDialog}\n            mode={\"Title for new to-do\"}\n          />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React from \"react\";\nimport List from \"./components/List\";\nimport { Grid, Box, AppBar, Toolbar, Typography } from \"@material-ui/core\";\n\nfunction App() {\n  return (\n    <Grid container direction=\"column\">\n      <Grid item xs={12}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\">Todo app</Typography>\n          </Toolbar>\n        </AppBar>\n      </Grid>\n      <Box mt=\"2rem\">\n        <Grid container item alignItems=\"center\">\n          <Grid item xs={false} sm={false} md={1} />\n          <Grid item xs={12} sm={12} md={10}>\n            <List />\n          </Grid>\n          <Grid item xs={false} sm={false} md={1} />\n        </Grid>\n      </Box>\n    </Grid>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}